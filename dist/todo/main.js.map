{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error/error.component.css","webpack:///./src/app/error/error.component.html","webpack:///./src/app/error/error.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/list-todos/list-todos.component.css","webpack:///./src/app/list-todos/list-todos.component.html","webpack:///./src/app/list-todos/list-todos.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/menu/menu.component.css","webpack:///./src/app/menu/menu.component.html","webpack:///./src/app/menu/menu.component.ts","webpack:///./src/app/service/basic-authentication.service.ts","webpack:///./src/app/service/data/todo-data.service.ts","webpack:///./src/app/service/data/welcome-data.service.ts","webpack:///./src/app/service/hardcoded-authentication.service.ts","webpack:///./src/app/service/http/http-intercepter-basic-auth.service.ts","webpack:///./src/app/service/route-guard.service.ts","webpack:///./src/app/todo/todo.component.css","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { TodoComponent } from './todo/todo.component';\r\nimport { RouteGuardService } from './service/route-guard.service';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { ListTodosComponent } from './list-todos/list-todos.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\n\r\n\r\n// welcome \r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent  },//canActivate, RouteGuardService\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'welcome/:name', component: WelcomeComponent, canActivate:[RouteGuardService]},\r\n  { path: 'todos', component: ListTodosComponent, canActivate:[RouteGuardService] },\r\n\r\n  { path: 'logout', component: LogoutComponent, canActivate:[RouteGuardService] },\r\n  { path: 'todos/:id', component: TodoComponent, canActivate:[RouteGuardService] },\r\n\r\n  { path: '**', component: ErrorComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n\\r\\n<app-menu></app-menu>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  //template: '<h1>{{title}}<h1>',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'List of Employees';\r\n  message = 'Welcome';\r\n}","export const API_URL = \"http://localhost:8080\"\r\nexport const TODO_JPA_API_URL = \"http://localhost:8080/jpa\"","import { HttpIntercepterBasicAuthService } from './service/http/http-intercepter-basic-auth.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { ListTodosComponent } from './list-todos/list-todos.component';\r\nimport { MenuComponent } from './menu/menu.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { LogoutComponent } from './logout/logout.component';\r\nimport { TodoComponent } from './todo/todo.component';\r\n\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { GridModule } from '@progress/kendo-angular-grid';\r\nimport { DateInputsModule } from '@progress/kendo-angular-dateinputs';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { LabelModule } from '@progress/kendo-angular-label';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    LoginComponent,\r\n    ErrorComponent,\r\n    ListTodosComponent,\r\n    MenuComponent,\r\n    FooterComponent,\r\n    LogoutComponent,\r\n    TodoComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    InputsModule,\r\n    BrowserAnimationsModule,    \r\n    GridModule,\r\n    DateInputsModule,\r\n    DropDownsModule,\r\n    LabelModule \r\n  ],\r\n  providers: [\r\n     {provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yL2Vycm9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"{{errorMessage}}\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  errorMessage = 'An Error Occured! Contact Support at *** - ***'\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".footer {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    width:100%;\\r\\n    height: 40px;\\r\\n    background-color:#17a2b8;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0lBQ25CLFVBQVU7SUFDVixXQUFXO0lBQ1gsYUFBYTtJQUNiLHlCQUF5QjtDQUM1QiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzE3YTJiODtcclxufSJdfQ== */\"","module.exports = \"<footer class=\\\"footer\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <span class=\\\"text-muted\\\">App Crud Prodigio</span>\\r\\n    </div>\\r\\n\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QtdG9kb3MvbGlzdC10b2Rvcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1> Tasks </h1>\\r\\n\\r\\n<div class=\\\"alert alert-success\\\" *ngIf='message'>{{message}}</div>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Description</th>\\r\\n        <th>Target Date</th>\\r\\n        <th>is Completed?</th>\\r\\n        <th>Update</th>\\r\\n        <th>Delete</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <!--   for (Todo todo: todos) {  -->\\r\\n              <tr *ngFor=\\\"let todo of todos\\\">\\r\\n                <td>{{todo.description}}</td>\\r\\n                <td>{{todo.targetDate | date | uppercase}}</td>\\r\\n                <td>{{todo.done}}</td>\\r\\n                <td><button (click)=\\\"updateTodo(todo.id)\\\" class=\\\"btn btn-success\\\">Update</button></td>\\r\\n                <td><button (click)=\\\"deleteTodo(todo.id)\\\" class=\\\"btn btn-warning\\\">Delete</button></td>\\r\\n              </tr>\\r\\n      <!-- } -->\\r\\n    </tbody>\\r\\n\\r\\n  </table>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n      <button (click)=\\\"addTodo()\\\" class=\\\"btn btn-success\\\">Add</button>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\"","import { TodoDataService } from './../service/data/todo-data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nexport class Todo {\r\n  constructor(\r\n    public id: number,\r\n    public description: string,\r\n    public done: boolean,\r\n    public targetDate: Date\r\n  ){\r\n\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list-todos',\r\n  templateUrl: './list-todos.component.html',\r\n  styleUrls: ['./list-todos.component.css']\r\n})\r\nexport class ListTodosComponent implements OnInit {\r\n\r\n  todos: Todo[]\r\n\r\n  message: string\r\n\r\n  // = [\r\n  //   new Todo(1, 'Learn to Dance', false, new Date()),\r\n  //   new Todo(2, 'Become an Expert at Angular', false, new Date()),\r\n  //   new Todo(3, 'Visit India', false, new Date())\r\n  //   // {id : 1, description : },\r\n  //   // {id : 2, description : ''},\r\n  //   // {id : 3, description : 'Visit India'}\r\n  // ]\r\n\r\n  // todo = {\r\n  //     id : 1,\r\n  //     description: 'Learn to Dance'\r\n  // }\r\n\r\n  constructor(\r\n    private todoService:TodoDataService,\r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.refreshTodos();\r\n  }\r\n\r\n  refreshTodos(){\r\n    this.todoService.retrieveAllTodos('in28minutes').subscribe(\r\n      response => {\r\n        console.log(response);\r\n        this.todos = response;\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteTodo(id) {\r\n    console.log(`delete todo ${id}` )\r\n    this.todoService.deleteTodo('in28minutes', id).subscribe (\r\n      response => {\r\n        console.log(response);\r\n        this.message = `Delete of Todo ${id} Successful!`;\r\n        this.refreshTodos();\r\n      }\r\n    )\r\n  }\r\n\r\n  updateTodo(id) {\r\n    console.log(`update ${id}`)\r\n    this.router.navigate(['todos',id])\r\n  }\r\n\r\n  addTodo() {\r\n    this.router.navigate(['todos',-1])\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<H1>Login!</H1>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"alert alert-warning\\\" *ngIf='invalidLogin'>{{errorMessage}}</div>\\r\\n\\r\\n  <div>\\r\\n    User Name : <input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\">\\r\\n    Password  : <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\">\\r\\n\\r\\n    \\r\\n    <button (click)=handleJWTAuthLogin() class=\\\"btn btn-success\\\">Login</button>\\r\\n    \\r\\n  </div>\\r\\n</div>\"","import { BasicAuthenticationService } from './../service/basic-authentication.service';\r\nimport { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username = 'in28minutes'\r\n  password = ''\r\n  errorMessage = 'Invalid Credentials'\r\n  invalidLogin = false\r\n\r\n  //Router\r\n  //Angular.giveMeRouter\r\n  //Dependency Injection\r\n  constructor(private router: Router,\r\n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\r\n    private basicAuthenticationService: BasicAuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleLogin() {\r\n    // console.log(this.username);\r\n    //if(this.username===\"in28minutes\" && this.password === 'dummy') {\r\n    if(this.hardcodedAuthenticationService.authenticate(this.username, this.password)) {\r\n      //Redirect to Welcome Page\r\n      this.router.navigate(['welcome', this.username])\r\n      this.invalidLogin = false\r\n    } else {\r\n      this.invalidLogin = true\r\n    }\r\n  }\r\n\r\n  handleBasicAuthLogin() {\r\n    // console.log(this.username);\r\n    //if(this.username===\"in28minutes\" && this.password === 'dummy') {\r\n    this.basicAuthenticationService.executeAuthenticationService(this.username, this.password)\r\n        .subscribe(\r\n          data => {\r\n            console.log(data)\r\n            this.router.navigate(['welcome', this.username])\r\n            this.invalidLogin = false      \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this.invalidLogin = true\r\n          }\r\n        )\r\n  }\r\n\r\n  handleJWTAuthLogin() {\r\n    this.basicAuthenticationService.executeJWTAuthenticationService(this.username, this.password)\r\n        .subscribe(\r\n          data => {\r\n            console.log(data)\r\n            this.router.navigate(['welcome', this.username])\r\n            this.invalidLogin = false      \r\n          },\r\n          error => {\r\n            console.log(error)\r\n            this.invalidLogin = true\r\n          }\r\n        )\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<H1>You are logged out</H1>\\r\\n<div class=\\\"container\\\">\\r\\n  Thank You For Using Our Application.\\r\\n</div>\"","import { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logout',\r\n  templateUrl: './logout.component.html',\r\n  styleUrls: ['./logout.component.css']\r\n})\r\nexport class LogoutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private hardcodedAuthenticationService: HardcodedAuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.hardcodedAuthenticationService.logout();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<header>\\r\\n    <nav class=\\\"navbar navbar-dark py-0 bg-primary navbar-expand-lg py-md-0\\\">\\r\\n        <div><a  class=\\\"navbar-brand\\\">\\r\\n            App Crud Prodigio</a></div>\\r\\n\\r\\n        <ul class=\\\"navbar-nav\\\">\\r\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/welcome/in28minutes\\\" class=\\\"nav-link\\\">Home</a></li>\\r\\n            <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/todos\\\" class=\\\"nav-link\\\">Tasks</a></li>\\r\\n          \\r\\n        </ul>\\r\\n\\r\\n        <ul class=\\\"navbar-nav navbar-collapse justify-content-end\\\">\\r\\n                <li><a *ngIf=\\\"!hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/login\\\" class=\\\"nav-link\\\">Login</a></li>\\r\\n                <li><a *ngIf=\\\"hardcodedAuthenticationService.isUserLoggedIn()\\\" routerLink=\\\"/logout\\\" class=\\\"nav-link\\\">Logout</a></li>\\r\\n        </ul>\\r\\n    </nav>\\r\\n</header>\"","import { HardcodedAuthenticationService } from './../service/hardcoded-authentication.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  //isUserLoggedIn: boolean = false;\r\n\r\n  constructor(private hardcodedAuthenticationService \r\n    : HardcodedAuthenticationService) { }\r\n\r\n  ngOnInit() {\r\n    //this.isUserLoggedIn = this.hardcodedAuthenticationService.isUserLoggedIn();\r\n  }\r\n\r\n}\r\n","import { API_URL } from './../app.constants';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {map} from 'rxjs/operators';\r\n\r\nexport const TOKEN = 'token'\r\nexport const AUTHENTICATED_USER = 'authenticaterUser'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BasicAuthenticationService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  executeJWTAuthenticationService(username, password) {\r\n    \r\n    return this.http.post<any>(\r\n      `${API_URL}/authenticate`,{\r\n        username,\r\n        password\r\n      }).pipe(\r\n        map(\r\n          data => {\r\n            sessionStorage.setItem(AUTHENTICATED_USER, username);\r\n            sessionStorage.setItem(TOKEN, `Bearer ${data.token}`);\r\n            return data;\r\n          }\r\n        )\r\n      );\r\n    //console.log(\"Execute Hello World Bean Service\")\r\n  }\r\n\r\n\r\n  executeAuthenticationService(username, password) {\r\n    \r\n    let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\r\n\r\n    let headers = new HttpHeaders({\r\n        Authorization: basicAuthHeaderString\r\n      })\r\n\r\n    return this.http.get<AuthenticationBean>(\r\n      `${API_URL}/basicauth`,\r\n      {headers}).pipe(\r\n        map(\r\n          data => {\r\n            sessionStorage.setItem(AUTHENTICATED_USER, username);\r\n            sessionStorage.setItem(TOKEN, basicAuthHeaderString);\r\n            return data;\r\n          }\r\n        )\r\n      );\r\n    //console.log(\"Execute Hello World Bean Service\")\r\n  }\r\n\r\n  getAuthenticatedUser() {\r\n    return sessionStorage.getItem(AUTHENTICATED_USER)\r\n  }\r\n\r\n  getAuthenticatedToken() {\r\n    if(this.getAuthenticatedUser())\r\n      return sessionStorage.getItem(TOKEN)\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem(AUTHENTICATED_USER)\r\n    return !(user === null)\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.removeItem(AUTHENTICATED_USER)\r\n    sessionStorage.removeItem(TOKEN)\r\n  }\r\n\r\n}\r\n\r\nexport class AuthenticationBean{\r\n  constructor(public message:string) { }\r\n}","import { TODO_JPA_API_URL } from './../../app.constants';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Todo } from '../../list-todos/list-todos.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoDataService {\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n  ) { }\r\n\r\n  retrieveAllTodos(username) {\r\n    return this.http.get<Todo[]>(`${TODO_JPA_API_URL}/users/${username}/todos`);\r\n    //console.log(\"Execute Hello World Bean Service\")\r\n  }\r\n\r\n  deleteTodo(username, id){\r\n    return this.http.delete(`${TODO_JPA_API_URL}/users/${username}/todos/${id}`);\r\n  }\r\n\r\n  retrieveTodo(username, id){\r\n    return this.http.get<Todo>(`${TODO_JPA_API_URL}/users/${username}/todos/${id}`);\r\n  }\r\n\r\n  updateTodo(username, id, todo){\r\n    return this.http.put(\r\n          `${TODO_JPA_API_URL}/users/${username}/todos/${id}`\r\n                , todo);\r\n  }\r\n\r\n  createTodo(username, todo){\r\n    return this.http.post(\r\n              `${TODO_JPA_API_URL}/users/${username}/todos`\r\n                , todo);\r\n  }\r\n  \r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport class HelloWorldBean {\r\n  constructor(public message:string){ }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WelcomeDataService {\r\n\r\n  constructor(\r\n    private http:HttpClient\r\n  ) { }\r\n\r\n  executeHelloWorldBeanService() {\r\n    return this.http.get<HelloWorldBean>('http://localhost:8080/hello-world-bean');\r\n    //console.log(\"Execute Hello World Bean Service\")\r\n  }\r\n  //http://localhost:8080/hello-world/path-variable/in28minutes\r\n\r\n  executeHelloWorldServiceWithPathVariable(name) {\r\n    // let basicAuthHeaderString = this.createBasicAuthenticationHttpHeader();\r\n\r\n    // let headers = new HttpHeaders({\r\n    //     Authorization: basicAuthHeaderString\r\n    //   })\r\n\r\n    return this.http.get<HelloWorldBean>(\r\n      `http://localhost:8080/hello-world/path-variable/${name}`,\r\n      //{headers}\r\n      );\r\n    //console.log(\"Execute Hello World Bean Service\")\r\n  }\r\n\r\n  // createBasicAuthenticationHttpHeader() {\r\n  //   let username = 'in28minutes'\r\n  //   let password = 'dummy'\r\n  //   let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\r\n  //   return basicAuthHeaderString;\r\n  // }\r\n  //Access to XMLHttpRequest at \r\n  //'http://localhost:8080/hello-world/path-variable/in28minutes' \r\n  //from origin 'http://localhost:4200' has been blocked by CORS policy: \r\n  //No 'Access-Control-Allow-Origin' header is present on the requested resource.\r\n\r\n  //Access to XMLHttpRequest at 'http://localhost:8080/hello-world/path-variable/in28minutes' from origin 'http://localhost:4200' \r\n  //has been blocked by CORS policy: \r\n  //Response to preflight request doesn't pass \r\n  //access control check: It does not have HTTP ok status\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HardcodedAuthenticationService {\r\n\r\n  constructor() { }\r\n\r\n  authenticate(username, password) {\r\n    //console.log('before ' + this.isUserLoggedIn());\r\n    if(username===\"in28minutes\" && password === 'dummy') {\r\n      sessionStorage.setItem('authenticaterUser', username);\r\n      //console.log('after ' + this.isUserLoggedIn());\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  isUserLoggedIn() {\r\n    let user = sessionStorage.getItem('authenticaterUser')\r\n    return !(user === null)\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.removeItem('authenticaterUser')\r\n  }\r\n\r\n}\r\n","import { BasicAuthenticationService } from './../basic-authentication.service';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor{\r\n\r\n  constructor(\r\n    private basicAuthenticationService : BasicAuthenticationService\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler){\r\n    // let username = 'in28minutes'\r\n    // let password = 'dummy'\r\n    //let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\r\n    let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n    let username = this.basicAuthenticationService.getAuthenticatedUser()\r\n\r\n    if(basicAuthHeaderString && username) { \r\n      request = request.clone({\r\n        setHeaders : {\r\n            Authorization : basicAuthHeaderString\r\n          }\r\n        }) \r\n    }\r\n    return next.handle(request);\r\n  }\r\n\r\n\r\n}\r\n","import { HardcodedAuthenticationService } from './hardcoded-authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteGuardService implements CanActivate {\r\n\r\n  constructor(\r\n    private hardcodedAuthenticationService: HardcodedAuthenticationService,\r\n    private router: Router) {\r\n\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n    if (this.hardcodedAuthenticationService.isUserLoggedIn())\r\n      return true;\r\n\r\n    this.router.navigate(['login']);\r\n\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \".ng-invalid:not(form) {\\r\\n    border-left: 5px solid red;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90b2RvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7Q0FDOUIiLCJmaWxlIjoic3JjL2FwcC90b2RvL3RvZG8uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZy1pbnZhbGlkOm5vdChmb3JtKSB7XHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkIHJlZDtcclxufSJdfQ== */\"","module.exports = \"<H1>Task List</H1>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"todoForm.dirty && todoForm.invalid\\\">Enter valid values</div>\\r\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"todoForm.dirty && targetDate.invalid\\\">Enter valid Target Date</div>\\r\\n  <div class=\\\"alert alert-warning\\\" *ngIf=\\\"todoForm.dirty && description.invalid\\\">Enter atleast 5 characters in Description</div>\\r\\n  \\r\\n  <form (ngSubmit)=\\\"!todoForm.invalid && saveTodo()\\\" #todoForm=\\\"ngForm\\\">\\r\\n    <fieldset class=\\\"form-group\\\">\\r\\n      <label>Description</label>\\r\\n      <input type=\\\"text\\\" #description=\\\"ngModel\\\" \\r\\n            [(ngModel)]=\\\"todo.description\\\" class=\\\"form-control\\\" \\r\\n                name=\\\"description\\\" required=\\\"required\\\" minlength=\\\"5\\\">\\r\\n    </fieldset>\\r\\n\\r\\n    <fieldset class=\\\"form-group\\\">\\r\\n        <label>Target Date</label>\\r\\n        <input type=\\\"date\\\" #targetDate=\\\"ngModel\\\"\\r\\n        [ngModel]=\\\"todo.targetDate | date:'yyyy-MM-dd' \\\"\\r\\n        (ngModelChange)=\\\"todo.targetDate = $event\\\"\\r\\n        class=\\\"form-control\\\" name=\\\"targetDate\\\" required=\\\"required\\\" >\\r\\n    </fieldset>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Save</button>\\r\\n  </form>  \\r\\n</div>\"","import { ActivatedRoute, Router } from '@angular/router';\r\nimport { TodoDataService } from './../service/data/todo-data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Todo } from '../list-todos/list-todos.component';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  styleUrls: ['./todo.component.css']\r\n})\r\nexport class TodoComponent implements OnInit {\r\n\r\n  id:number\r\n  todo: Todo\r\n\r\n  constructor(\r\n    private todoService: TodoDataService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.id = this.route.snapshot.params['id'];\r\n    \r\n    this.todo = new Todo(this.id,'',false,new Date());\r\n    \r\n    if(this.id!=-1) {\r\n      this.todoService.retrieveTodo('in28minutes', this.id)\r\n          .subscribe (\r\n            data => this.todo = data\r\n          )\r\n    }\r\n  }\r\n\r\n  saveTodo() {\r\n    if(this.id == -1) { //=== ==\r\n      this.todoService.createTodo('in28minutes', this.todo)\r\n          .subscribe (\r\n            data => {\r\n              console.log(data)\r\n              this.router.navigate(['todos'])\r\n            }\r\n          )\r\n    } else {\r\n      this.todoService.updateTodo('in28minutes', this.id, this.todo)\r\n          .subscribe (\r\n            data => {\r\n              console.log(data)\r\n              this.router.navigate(['todos'])\r\n            }\r\n          )\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1> Prodigio Portal </h1>\\r\\n\\r\\n<div class=\\\"alert alert-success\\\" *ngIf='message'>{{message}}</div>\\r\\n\\r\\n\"","import { WelcomeDataService } from './../service/data/welcome-data.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\n\r\nexport class WelcomeComponent implements OnInit {\r\n\r\n  message = 'Welcome to App Crud Prodigio'\r\n  welcomeMessageFromService:string\r\n  name = ''\r\n\r\n  \r\n  constructor(\r\n/*     private route:ActivatedRoute, */\r\n    private router : Router,\r\n    private service:WelcomeDataService,\r\n   ) { \r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n   \r\n    /* this.name = this.router.snapshot.params['name']; */\r\n\r\n    \r\n  }\r\n\r\n  getWelcomeMessage() {\r\n    \r\n    this.service.executeHelloWorldBeanService().subscribe(\r\n      response => this.handleSuccessfulResponse(response),\r\n      error => this.handleErrorResponse(error)\r\n    );\r\n    \r\n  }\r\n\r\n  getWelcomeMessageWithParameter() {\r\n    \r\n    this.service.executeHelloWorldServiceWithPathVariable(this.name).subscribe(\r\n      response => this.handleSuccessfulResponse(response),\r\n      error => this.handleErrorResponse(error)\r\n    );\r\n    \r\n  }\r\n\r\n  handleSuccessfulResponse(response){\r\n    this.welcomeMessageFromService = response.message\r\n  }\r\n\r\n  handleErrorResponse(error) {\r\n    this.welcomeMessageFromService = error.error.message\r\n  }\r\n\r\n  \r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}